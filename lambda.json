{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Lambda diagnostic endpoint file creation",
  "Parameters" : {
    "BucketName": {
      "NoEcho": "true",
      "Type": "String",
      "Description" : "S3 bucket name to put the file",
    },
    "FileName": {
      "NoEcho": "true",
      "Type": "String",
      "Description" : "File name to put in the S3 bucket",
    },
    "FileContent": {
      "NoEcho": "true",
      "Type": "String",
      "Description" : "File content in string",
    },
    "ScheduleExpression": {
      "NoEcho": "true",
      "Type": "String",
      "Description" : "ScheduleExpression - refer http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
    }
  },
  "Resources": {
    "LambdaFuctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Effect": "Allow",
              "Sid": ""
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "Policy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [{ "Effect": "Allow", "Action": ["s3:PutObject"], "Resource": "arn:aws:s3:::*" }]
            }
          }
        ]
      }
    },
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": { "Fn::Join": ["", [
            "var AWS = require('aws-sdk');",
            "exports.handler = function(event, context) {",
              "  var s3 = new AWS.S3();",
              "  var param = ",
              "{Bucket: '",
                { "Ref":"BucketName"},
                "', Key: '",
                { "Ref":"FileName"},
                "', Body: '",
                { "Ref":"FileContent"},
                "'};",
                "  s3.upload(param, function(err, data) {",
                  "    if (err) console.log(err, err.stack);",
                  "    else console.log(data);",
                  "    console.log('Great Success');",
                  "    context.done();",
                  "});}"
                  ]]}
                },
                "Handler": "index.handler",
                "Role": {"Fn::GetAtt": ["LambdaFuctionRole", "Arn"]},
                "Runtime": "nodejs4.3",
                "Timeout": 10
              }
            },
            "ScheduledEventRule": {
              "Type": "AWS::Events::Rule",
              "Properties": {
                "Description": "Scheduled Lambda Invocation Rule",
                "ScheduleExpression": { "Ref":"ScheduleExpression"},
                "State": "ENABLED",
                "Targets": [
                  {
                    "Id": "LambdaFunctionTarget",
                    "Arn": {"Fn::GetAtt": ["LambdaFunction", "Arn"]}
                  }
                ]
              }
            },
            "InvokeLambdaPermission": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {"Fn::GetAtt": ["ScheduledEventRule", "Arn"]},
                "FunctionName": {"Fn::GetAtt": ["LambdaFunction", "Arn"]}
              }
            }
          }
        }
